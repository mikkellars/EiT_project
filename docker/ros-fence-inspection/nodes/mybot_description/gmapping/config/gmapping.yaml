# Parameters used by our GMapping wrapper

# throw away every nth laser scan
throttle_scans:      1
# the tf frame_id to use for the robot base pose
base_frame:          chassis
# the tf frame_id where the robot pose on the map is published
map_frame:           map
# the tf frame_id from which odometry is read
odom_frame:          odom
# time in seconds between two recalculations of the map
map_update_interval: 1.0    # standard is 5.0



# Parameters used by GMapping itself:
# Laser Parameters (its designed for long range lasers):

# maximum range of the laser scanner that is used for map building (default: same as maxRange)
# Unset maxUrange and maxRange and it will autodetect
maxUrange:     25    # auto set to 24.99. not standard. is enabled
# maximum range of the laser scans. Rays beyond this range get discarded completely. (default: maximum laser range minus 1 cm, as received in the the first LaserScan message)
maxRange:      25   # auto set to 24.99. not standard. is enabled
# standard deviation for the scan matching process (cell)
sigma:         0.05
# search window for the scan matching process
kernelSize:    1 # not sure if standard. is 1.0 or 10. increasing is comp heavy
# initial search step for scan matching (linear)
lstep:         0.05
# initial search step for scan matching (angular)
astep:         0.05
# number of refinement steps in the scan matching. The final "precision" for the match is lstep*2^(-iterations) or astep*2^(-iterations), respectively.
iterations:    5 
# standard deviation for the scan matching process (single laser beam)
lsigma:        0.075
# gain for smoothing the likelihood
ogain:         3.0
# take only every (n+1)th laser ray for computing a match (0 = take all rays)
lskip:         0
# Minimum score for considering the outcome of the scan matching good. Can avoid jumping pose estimates in large open spaces when using laser scanners with limited range (e.g. 5m). Scores go up to 600+, try 50 for example when experiencing jumping estimate issues.
minimum_score: 100


# Motion Model Parameters (all standard deviations of a gaussian noise model)

# linear noise component (x and y)
srr: 0.1   # standard is 0.1
# angular noise component (theta)
srt: 0.2   # standard is 0.2
# linear -> angular noise component
str: 0.1   # standard is 0.1
# angular -> linear noise component
stt: 0.2   # standard is 0.2



# Others:
# the robot only processes new measurements if the robot has moved at least this many meters
linearUpdate:      0.5   # not standard. is 1.0. first set to 0.5
# the robot only processes new measurements if the robot has turned at least this many rads. Increase as much as the cpu allows!
angularUpdate:     0.25   # Standard is 0.5
# Process a scan if the last scan processed is older than the update time in seconds. A value less than zero will turn time based updates off.
temporalUpdate:    -1.0   # not standard. is -1.0
# threshold at which the particles get resampled. Higher means more frequent resampling.
resampleThreshold: 0.5   # standard is 0.5
# (fixed) number of particles. Each particle represents a possible trajectory that the robot has traveled. Increase as much as the cpu allows!
particles:         40    # Standard is 30



# Initial map dimensions and resolution
# minimum x position in the map [m]
xmin:  20    # not standard. is -100
# minimum y position in the map [m]
ymin:  20    # not standard. is -100
# maximum x position in the map [m]
xmax:  20    # not standard. is 100
# maximum y position in the map [m]
ymax:  20    # not standard. is 100
# size of one pixel [m]
delta: 0.05  # standard is 0.05 



#Likelihood sampling (used in scan matching)
#  linear range
llsamplerange: 0.01 
# linear step size       
lasamplerange: 0.005  
# linear range
llsamplestep:  0.01
# angular step size
lasamplestep:  0.005


# Threshold on gmapping's occupancy values. Cells with greater occupancy are considered occupied
occ_thresh: 0.25

# How long (in seconds) between transform publications.
transform_publish_period: 0.05       

# Unknowns
tf_delay: 0.1  # not standard. is 0.05
